#!/bin/bash
# ┌─────────────────────────────────────────────────------┐
# │ File / Version : tool-update / live                   │
# │ Author         : Mark Hamilton │ Co-Pilot AI assisted │
# │ Script Purpose : Update Kali Packages.                │
# │ Package        : toolbox                              │
# └──────────────────────────────────────────────--------─┘
# Usage:
#   tool-update [--dry-run] [--log] [--hashmap]
# Examples:
#   tool-update --dry-run
#   tool-update --log
#   tool-update --hashmap
# Description:
#   Updates Kali packages using apt update, upgrade, autoremove, and clean.
#   Supports dry-run simulation, logging to /var/log/tool-update.log,
#   and hash-based traceability via .hashmap.
# End Help

set -e

LOG=false
DRY_RUN=false
HASHMAP=false

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        --dry-run) DRY_RUN=true ;;
        --log) LOG=true ;;
        --hashmap) HASHMAP=true ;;
        --help)
            echo "Usage: tool-update [--dry-run] [--log] [--hashmap]"
            exit 0 ;;
        *) echo "Unknown option: $1"; exit 1 ;;
    esac
    shift
done

steps=(
    "apt update"
    "apt upgrade -y"
    "apt autoremove -y"
    "apt clean"
)

echo "🔄 Starting update process..."
for step in "${steps[@]}"; do
    if $DRY_RUN; then
        echo "[DRY-RUN] Would execute: $step"
    else
        echo "✅ Executing: $step"
        eval "$step"
    fi
done

if $LOG && ! $DRY_RUN; then
    echo "📝 Logging to /var/log/tool-update.log"
    {
        echo "=== tool-update ==="
        date
        for step in "${steps[@]}"; do echo "$step"; done
        echo "==================="
    } >> /var/log/tool-update.log
fi

if $HASHMAP; then
    sha256sum "$0" > .hashmap/tool-update.hash
    date > .hashmap/tool-update.timestamp
fi

echo "🎉 Update complete."
