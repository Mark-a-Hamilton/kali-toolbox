#!/bin/bash
# ┌───────────────────────────────────────────--------────┐
# │ Type / Version : bash / live                          │
# │ Author         : Mark Hamilton │ Co-Pilot AI assisted │
# │ Script Purpose : Toolbox Index                        │
# │ Package        : toolbox                              │
# └───────────────────────────────────────────────------──┘
# Usage:
#   tool-box [<tool-name>]
# Examples:
#   tool-box
#   tool-box tool-diag
#   tool-box tool-update
# Description:
#   Lists all available tools in the Kali Toolbox with version info.
#   If a tool name is provided, displays its embedded help block.
#   Parses help blocks using (# Usage:) to (# End Help) comment markers.
# End Help

TOOL_DIR="/usr/local/bin"
TOOL_PREFIX="tool-"

if [ -z "$1" ]; then
  echo "Available Tools in Kali Toolbox:"
  for file in $TOOL_DIR/${TOOL_PREFIX}*; do
    name=$(basename "$file")
    # Strip trailing pipes and whitespace
    purpose=$(grep -m1 "^#.*Script Purpose" "$file" | cut -d':' -f2- | sed 's/^ *//;s/ *$//;s/│$//;s/ *$//')
    version=$(grep -m1 "^#.*Version" "$file" | cut -d':' -f2- | sed 's/^ *//;s/ *$//;s/│$//;s/ *$//')
    # Format output
    printf "%-15s : %-45s (Version: %s)\n" "$name" "$purpose" "$version"
  done
  echo -e "\nFor bash script detailed help use 'tool-box <tool-name>'."
  echo -e "For python script detailed help use '<tool-name> -h'."
else
  target="$TOOL_DIR/$1"
  if [ -f "$target" ]; then
    awk '/┌/,/┘/' "$target"
    echo -e "\nUsage Guide:"
    awk '/^# Usage:/,/^# Examples:/' "$target" | sed 's/^# //'
    echo -e "\nExamples:"
    awk '/^# Examples:/,/^# End Help/' "$target" | sed 's/^# //'
  else
    echo "Tool '$1' not found in $TOOL_DIR."
  fi
fi
